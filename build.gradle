plugins {
    id 'base'
    id 'net.minecrell.licenser' version '0.3' apply false
    id 'com.github.johnrengelman.shadow' version '1.2.4' apply false
}

apply from: 'gradle/idea.gradle'
apply from: 'gradle/eclipse.gradle'

description = 'Natrolite Minigame Manager'

ext {
    homepage = 'https://natrolite.org/'

    licenseName = 'GNU General Public License (GPL)'
    licenseUrl = 'https://www.gnu.org/licenses/gpl.txt'
    licenseDist = 'repo'

    issueSystem = 'GitHub Issues'
    issueUrl = 'https://github.com/natrolite/natrolite/issues'

    ciSystem = 'Travis CI'
    ciUrl = 'https://travis-ci.org/natrolite/natrolite'

    scmUrl = 'https://github.com/natrolite/natrolite'
    scmConnection = 'scm:git:git://github.com/natrolite/natrolite.git'
    scmDevConnection = 'scm:git:ssh://github.com:natrolite/natrolite.git'
}

allprojects {
    group = 'org.natrolite.bukkit'

    ext {
        utils = new Properties()
        bukkitVersion = '1.12-R0.1-SNAPSHOT'
        javaVersion = '1.8'
        encoding = 'UTF-8'
        javadocLinks = [
                'http://docs.oracle.com/javase/8/docs/api/',
                'https://jd.spongepowered.org/6.0.0/',
                'https://hub.spigotmc.org/javadocs/spigot/'
        ] as String[]
    }

    repositories {
        mavenCentral()
        maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }

    utils.putAll(project(':natrolite-utils').subprojects.collectEntries {
        project -> [project.name, project]
    })

    if (JavaVersion.current().isJava8Compatible()) {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

subprojects { sub ->
    version = rootProject.version

    plugins.withType(JavaPlugin) {

        plugins.apply('checkstyle')
        plugins.apply('net.minecrell.licenser')
        plugins.apply('com.github.johnrengelman.shadow')

        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion

        dependencies {
            compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '1.3.9'
        }

        javadoc {
            options.encoding = 'UTF-8'
            options.header = sub.name
            options.author = true
            options.addStringOption('Xdoclint:none', '-quiet')
        }

        shadowJar {
            classifier = 'shaded'
        }

        license {
            header = rootProject.file('HEADER')
            include '**/*.java'
            newLine = true
        }

        checkstyle {
            toolVersion = '7.6.1'
            configFile = rootProject.file('checkstyle.xml')
        }

        compileJava {
            sourceCompatibility = javaVersion
            targetCompatibility = javaVersion
            options.encoding = encoding
        }

        compileTestJava {
            sourceCompatibility = javaVersion
            targetCompatibility = javaVersion
            options.encoding = encoding
        }

        processResources {
            from rootProject.file('LICENSE')
        }

        task sourceJar(type: Jar) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            classifier = 'javadoc'
            from javadoc.destinationDir
        }

        task checkstyle(dependsOn: tasks.withType(Checkstyle))

        gradle.taskGraph.whenReady { TaskExecutionGraph graph ->
            if (!graph.allTasks.contains(tasks.checkstyle)) {
                graph.allTasks.findAll {
                    it.name.startsWith('checkstyle')
                }.each {
                    it.enabled = false
                }
            }
        }

        artifacts {
            archives sourceJar
            archives javadocJar
        }
    }
}

task aggregatedJavadocs(type: Javadoc) {
    group = 'Documentation'
    title = "Natrolite API"

    options.author true
    options.links(javadocLinks)
    options.addStringOption 'Xdoclint:none', '-quiet'

    destinationDir = file("$rootProject.buildDir/docs/aggregated/$version")

    subprojects { sub ->
        if (sub.name != 'natrolite-core') {
            plugins.withType(JavaPlugin) {
                source += sub.sourceSets.main.allJava
                classpath += sub.sourceSets.main.compileClasspath
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}