plugins {
  id 'base'
  id 'net.minecrell.licenser' version '0.3' apply false
  id 'com.github.johnrengelman.shadow' version '1.2.4' apply false
}

apply from: 'gradle/idea.gradle'
apply from: 'gradle/eclipse.gradle'

allprojects {
  group = 'org.natrolite.bukkit'
  version = '1.0.12'
  ext.homepage = 'https://natrolite.org/'
}

subprojects { sub ->

  apply plugin: 'java'
  apply plugin: 'checkstyle'
  apply plugin: 'net.minecrell.licenser'
  apply plugin: 'com.github.johnrengelman.shadow'

  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'

  compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
  }

  compileTestJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
  }

  javadoc {
    options {
      encoding = 'UTF-8'
      header = sub.name
      author = true
      links = [
        'http://docs.oracle.com/javase/8/docs/api/',
        'https://jd.spongepowered.org/6.0.0/',
        'https://hub.spigotmc.org/javadocs/spigot/'
      ]
      addStringOption('Xdoclint:none', '-quiet')
    }
  }

  checkstyle {
    toolVersion = '8.0'
    configFile = rootProject.file('checkstyle.xml')
  }

  license {
    header = rootProject.file('HEADER.txt')
    newLine = true
    include '**/*.java'
    include '**/*.yml'
    include '**/*.properties'
  }

  shadowJar {
    classifier = 'shaded'
  }

  repositories {
    mavenCentral()
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'http://repo.natrolite.org/repository/maven-public/' }
  }

  dependencies {
    compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '1.3.9'
    testCompile group: 'com.google.code.findbugs', name: 'jsr305', version: '1.3.9'

    compileOnly group: 'org.spigotmc', name: 'spigot-api', version: '1.12-R0.1-SNAPSHOT'
    testCompile group: 'org.spigotmc', name: 'spigot-api', version: '1.12-R0.1-SNAPSHOT'

    compileOnly group: 'net.xnity', name: 'odium-core', version: '1.0.1'
  }

  processResources {
    from rootProject.file('LICENSE.txt')
    from rootProject.file('THIRD-PARTY-LICENSES.txt')
  }

  task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  artifacts {
    archives sourceJar
    archives javadocJar
  }

  task checkstyle(dependsOn: tasks.withType(Checkstyle))

  gradle.taskGraph.whenReady { TaskExecutionGraph graph ->
    if (!graph.allTasks.contains(tasks.checkstyle)) {
      graph.allTasks.findAll {
        it.name.startsWith('checkstyle')
      }.each {
        it.enabled = false
      }
    }
  }

  build.dependsOn(shadowJar)

  apply from: rootProject.file('gradle/deploy.gradle')
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.0'
}
